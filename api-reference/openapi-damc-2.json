{
  "openapi": "3.0.1",
  "info": {
    "title": "ROOTKey Documentation",
    "description": "Your API of choice for creating, managing, and validating information easily and securely!",
    "termsOfService": "https://www.rootkey.ai/legal/privacy-policy",
    "contact": {
      "name": "ROOTKey",
      "url": "https://www.rootkey.ai/contact",
      "email": "support@rootkey.ai"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "description": "Staging",
      "url": "https://dev-rootkey.westeurope.cloudapp.azure.com/auth-service/api-v1/"
    }
  ],
  "security": [
    {
      "x-api-key": []
    }
  ],
  "paths": {
    "/status/": {
      "get": {
        "tags": [
          "Status"
        ],
        "description": "Check the status of the API on the selected version",
        "security": [],
        "responses": {
          "200": {
            "description": "API status response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "[Auth service]: Status OK"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Version not found",
            "content": {
              "application/json": {
                "example": {
                  "error": 404,
                  "message": "Resource not found"
                },
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/damc/assets/": {
      "get": {
        "tags": [
          "DAMC"
        ],
        "description": "List registered assets",
        "parameters": [
          {
            "in": "query",
            "name": "ownerWallet",
            "description": "The owner's address to list all assets",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Wallet not found",
            "content": {
              "application/json": {
                "example": {
                  "errorCode": "resource_not_found",
                  "message": "Wallet not found!",
                  "docUrl": "https://docs.rootkey.ai/api-reference/errors#resource-not-found",
                  "timestamp": "2024-08-01T00:00:00.294Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "List of Assets",
            "content": {
              "application/json": {
                "example": {
                  "assetId": "1",
                  "assetURI": "https://example.com/assets/asset_1.json",
                  "owner": "0xB411f2302B73331c96D983fE466E85F287Da8A98"
                },
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DAMC"
        ],
        "description": "Create a new asset",
        "requestBody": {
          "description": "Asset creation request payload",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/assetCreation"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Wallet not found",
            "content": {
              "application/json": {
                "example": {
                  "errorCode": "resource_not_found",
                  "message": "Wallet not found!",
                  "docUrl": "https://docs.rootkey.ai/api-reference/errors#resource-not-found",
                  "timestamp": "2024-08-01T00:00:00.294Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "Asset Created",
            "content": {
              "application/json": {
                "example": {
                  "message": "Asset registered successfully!"
                },
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/damc/assets/{assetId}/maintenances/": {
      "get": {
        "tags": [
          "DAMC"
        ],
        "description": "List maintenances for a specific asset",
        "parameters": [
          {
            "in": "path",
            "name": "assetId",
            "description": "The asset identifier for listing maintenance",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "viewerWallet",
            "description": "Admin address with permissions to list maintenances",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Wallet not found",
            "content": {
              "application/json": {
                "example": {
                  "errorCode": "resource_not_found",
                  "message": "Wallet not found!",
                  "docUrl": "https://docs.rootkey.ai/api-reference/errors#resource-not-found",
                  "timestamp": "2024-08-01T00:00:00.294Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "List of asset maintenances",
            "content": {
              "application/json": {
                "example": {
                  "assetId": "1",
                  "maintenanceId": "3",
                  "maintenanceHash": "0x6162635465737400000000000000000000000000000000000000000000000000"
                },
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/damc/assets/{assetId}/maintenances/{maintenanceId}/": {
      "get": {
        "tags": [
          "DAMC"
        ],
        "description": "Get the total of the maintenances realized on the specified asset",
        "parameters": [
          {
            "in": "path",
            "name": "assetId",
            "description": "The asset id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "maintenanceId",
            "description": "The maintenance id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "viewerAddress",
            "description": "The viewers's address to list all asset maintenances",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid Address",
            "content": {
              "application/json": {
                "example": {
                  "errorCode": "wallet_address_invalid",
                  "message": "Invalid Address submmited",
                  "docUrl": "https://docs.rootkey.ai/api-reference/errors#wallet-address-invalid",
                  "timestamp": "2024-08-01T00:00:00.294Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "Maintenance Recorded Successfully",
            "content": {
              "application/json": {
                "example": {},
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/damc/assets/{assetId}/maintenances/count/": {
      "get": {
        "tags": [
          "DAMC"
        ],
        "description": "Get the total of the maintenances realized on the specified asset",
        "parameters": [
          {
            "in": "path",
            "name": "assetId",
            "description": "The id of the asset from which to obtain the maintenance total",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ownerWallet",
            "description": "The owner's address to list all assets",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid Address",
            "content": {
              "application/json": {
                "example": {
                  "errorCode": "wallet_address_invalid",
                  "message": "Invalid Address submmited",
                  "docUrl": "https://docs.rootkey.ai/api-reference/errors#wallet-address-invalid",
                  "timestamp": "2024-08-01T00:00:00.294Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "Total amount of maintenances on specified asset",
            "content": {
              "application/json": {
                "example": {},
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/damc/assets/{assetId}/viewers/verify/": {
      "get": {
        "tags": [
          "DAMC"
        ],
        "description": "Verify a viewer's access to a specific asset",
        "parameters": [
          {
            "in": "path",
            "name": "assetId",
            "description": "The asset identifier for listing maintenance",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ownerWallet",
            "description": "The address of the owner of the asset",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "viewerAddress",
            "description": "The address of the viewer to check if it has access to the asset",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Wallet not found",
            "content": {
              "application/json": {
                "example": {
                  "errorCode": "resource_not_found",
                  "message": "Wallet not found!",
                  "docUrl": "https://docs.rootkey.ai/api-reference/errors#resource-not-found",
                  "timestamp": "2024-08-01T00:00:00.294Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "Confirmation of the permissions of the viewer",
            "content": {
              "application/json": {
                "example": {
                  "isViewer": true
                },
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/damc/assets/{assetId}/transfer/": {
      "post": {
        "tags": [
          "DAMC"
        ],
        "description": "Transfer a specific asset to a new owner",
        "parameters": [
          {
            "in": "path",
            "name": "assetId",
            "description": "The asset identifier to be transferred",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Asset transfer request payload",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/assetTransfer"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Asset not found",
            "content": {
              "application/json": {
                "example": {
                  "error": 404,
                  "message": "Asset not found!"
                },
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/damc/assets/{assetId}/workers/collective/": {
      "post": {
        "tags": [
          "DAMC"
        ],
        "description": "Add a collective of workers to a specific asset",
        "parameters": [
          {
            "in": "path",
            "name": "assetId",
            "description": "The asset identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Collective of workers request payload",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/addCollectiveOfWorkers"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Add workers collective successfully",
            "content": {
              "application/json": {
                "example": {
                  "message": "Workers added successfully!"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Address",
            "content": {
              "application/json": {
                "example": {
                  "errorCode": "wallet_address_invalid",
                  "message": "Invalid Address submmited",
                  "docUrl": "https://docs.rootkey.ai/api-reference/errors#wallet-address-invalid",
                  "timestamp": "2024-08-01T00:00:00.294Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DAMC"
        ],
        "description": "Remove a collective of workers from a specific asset",
        "parameters": [
          {
            "in": "path",
            "name": "assetId",
            "description": "Identifier of the asset to remove a collective of workers",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ownerWallet",
            "description": "The address of the owner of the given asset",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "collectiveAddress",
            "description": "The address of the collective of workers to be removed from the given asset",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Asset not found",
            "content": {
              "application/json": {
                "example": {
                  "error": 404,
                  "message": "Asset not found!"
                },
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/damc/workers/": {
      "get": {
        "tags": [
          "DAMC"
        ],
        "description": "List registered workers",
        "parameters": [
          {
            "in": "query",
            "name": "ownerWallet",
            "description": "The owner's address to list all workers",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "assetId",
            "description": "The identifier of the asset for which you want to list the workers",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Workers not found",
            "content": {
              "application/json": {
                "example": {
                  "error": 404,
                  "message": "Workers not found!"
                },
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DAMC"
        ],
        "description": "Create new workers",
        "requestBody": {
          "description": "Create new workers request payload",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/workerCreation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Worker created successfully",
            "content": {
              "application/json": {
                "example": {
                  "name": "Worker 1",
                  "walletAddress": "0xB411f2302B73331c96D983fE466E85F287Da8A98"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DAMC"
        ],
        "description": "Remove workers from a collective of workers",
        "parameters": [
          {
            "in": "query",
            "name": "ownerWallet",
            "description": "The owner's address to list all workers",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "collectiveAddress",
            "description": "The address of the collective to witch the workers are to be added",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "workers",
            "description": "The list of the workers to be added to the collective",
            "required": true,
            "schema": {
              "type": "array"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Workers not found",
            "content": {
              "application/json": {
                "example": {
                  "error": 404,
                  "message": "Workers not found!"
                },
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/damc/workers/collective/": {
      "get": {
        "tags": [
          "DAMC"
        ],
        "description": "List collective of workers",
        "parameters": [
          {
            "in": "query",
            "name": "ownerWallet",
            "description": "The owner's address to list all workers",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of collectives",
            "content": {
              "application/json": {
                "example": {
                  "collectives": [
                    "0xae4d92973021ef824ef4ea12b10e3af158826996",
                    "0x5d8fa815704e3c328d8ef548e92a8666266e2ec5",
                    "0xf1788d2bf7f38934c03a9c67ef03d0d02561143c",
                    "0xdbd25a3a99dd737b2659d8dd3fb84931a22d8b29"
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Address",
            "content": {
              "application/json": {
                "example": {
                  "errorCode": "wallet_address_invalid",
                  "message": "Invalid Address submmited",
                  "docUrl": "https://docs.rootkey.ai/api-reference/errors#wallet-address-invalid",
                  "timestamp": "2024-08-01T00:00:00.294Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DAMC"
        ],
        "description": "Create a new collective of workers",
        "requestBody": {
          "description": "Create a new collective of workers request payload",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createCollective"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Collective created successfully",
            "content": {
              "application/json": {
                "example": {
                  "message": "Collective created successfully",
                  "transactionHash": "0x0a535c95f4450bf2b468a606a093936b90d09c13c1cac6ca2d2f8543f9bfb433"
                }
              }
            }
          }
        }
      }
    },
    "/damc/workers/collective/add-workers/": {
      "post": {
        "tags": [
          "DAMC"
        ],
        "description": "Add new workers to a existent collective",
        "requestBody": {
          "description": "Add new workers to a existent  request payload",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/addWorkersToCollective"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Workers added successfully",
            "content": {
              "application/json": {
                "example": {
                  "message": "Workers successfully added to collective!",
                  "transactionHash": "0x0a535c95f4450bf2b468a606a093936b90d09c13c1cac6ca2d2f8543f9bfb433"
                }
              }
            }
          }
        }
      }
    },
    "/damc/assets/viewers/": {
      "post": {
        "tags": [
          "DAMC"
        ],
        "description": "Register new viewer on the specifc asset",
        "requestBody": {
          "description": "Add Viewers request payload",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/addAndRemoveAssetViewer"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Invalid Address",
            "content": {
              "application/json": {
                "example": {
                  "errorCode": "wallet_address_invalid",
                  "message": "Invalid Address submmited",
                  "docUrl": "https://docs.rootkey.ai/api-reference/errors#wallet-address-invalid",
                  "timestamp": "2024-08-01T00:00:00.294Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/damc/assets/viewers/remove/": {
      "patch": {
        "tags": [
          "DAMC"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/addAndRemoveAssetViewer"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Invalid Address",
            "content": {
              "application/json": {
                "example": {
                  "errorCode": "wallet_address_invalid",
                  "message": "Invalid Address submmited",
                  "docUrl": "https://docs.rootkey.ai/api-reference/errors#wallet-address-invalid",
                  "timestamp": "2024-08-01T00:00:00.294Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/damc/maintenances/": {
      "post": {
        "tags": [
          "DAMC"
        ],
        "description": "Creating new maintenance for a particular asset",
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createAssetMainetenancesRequest"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Invalid Address",
            "content": {
              "application/json": {
                "example": {
                  "errorCode": "wallet_address_invalid",
                  "message": "Invalid Address submmited",
                  "docUrl": "https://docs.rootkey.ai/api-reference/errors#wallet-address-invalid",
                  "timestamp": "2024-08-01T00:00:00.294Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "Maintenance Recorded Successfully",
            "content": {
              "application/json": {
                "example": {},
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/damc/assets/{assetId}/uri/": {
      "put": {
        "tags": [
          "DAMC"
        ],
        "description": "Get the total of the maintenances realized on the specified asset",
        "parameters": [
          {
            "in": "path",
            "name": "assetId",
            "description": "The asset id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateAssetUriRequest"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Invalid Address",
            "content": {
              "application/json": {
                "example": {
                  "errorCode": "wallet_address_invalid",
                  "message": "Invalid Address submmited",
                  "docUrl": "https://docs.rootkey.ai/api-reference/errors#wallet-address-invalid",
                  "timestamp": "2024-08-01T00:00:00.294Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "Maintenance Recorded Successfully",
            "content": {
              "application/json": {
                "example": {},
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "workerCreation": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the worker",
            "type": "string"
          }
        }
      },
      "assetCreation": {
        "required": [
          "ownerWallet",
          "assetURI"
        ],
        "type": "object",
        "properties": {
          "ownerWallet": {
            "description": "The address of the asset owner",
            "type": "string"
          },
          "assetURI": {
            "description": "Asset URI",
            "type": "string"
          }
        }
      },
      "updateAssetUriRequest": {
        "required": [
          "ownerWallet",
          "newUri"
        ],
        "type": "object",
        "properties": {
          "ownerWallet": {
            "description": "The address of the asset owner",
            "type": "string"
          },
          "newUri": {
            "description": "Updated asset URI",
            "type": "string"
          }
        }
      },
      "assetTransfer": {
        "required": [
          "ownerWallet",
          "destinationWallet"
        ],
        "type": "object",
        "properties": {
          "ownerWallet": {
            "description": "Address of the current owner of the asset to be transferred",
            "type": "string"
          },
          "destinationWallet": {
            "description": "Destination address to which the asset should be transferred",
            "type": "string"
          }
        }
      },
      "listAssetMaintenances": {
        "required": [
          "viewerWallet"
        ],
        "type": "object",
        "properties": {
          "viewerWallet": {
            "description": "The address of the asset viewer",
            "type": "string"
          }
        }
      },
      "addCollectiveOfWorkers": {
        "required": [
          "ownerWallet",
          "collectiveAddress"
        ],
        "type": "object",
        "properties": {
          "ownerWallet": {
            "description": "The address of the asset owner",
            "type": "string"
          },
          "collectiveAddress": {
            "description": "Address of the collective to be added to the asset",
            "type": "string"
          }
        }
      },
      "addWorkersToCollective": {
        "required": [
          "ownerWallet",
          "collectiveAddress",
          "workers"
        ],
        "type": "object",
        "properties": {
          "ownerWallet": {
            "description": "The address of the asset owner",
            "type": "string"
          },
          "collectiveAddress": {
            "description": "Address of the collective to be added to the asset",
            "type": "string"
          },
          "workers": {
            "description": "The list of workers to be added to the collective",
            "type": "array"
          }
        }
      },
      "setCollective": {
        "required": [
          "ownerWallet",
          "assetId",
          "collective"
        ],
        "type": "object",
        "properties": {
          "ownerWallet": {
            "description": "The address of the asset owner",
            "type": "string"
          },
          "assetId": {
            "description": "The asset identifier",
            "type": "string"
          },
          "collective": {
            "description": "The collective of wallets to be added to damc contract",
            "type": "array"
          }
        }
      },
      "unsetCollective": {
        "required": [
          "ownerWallet",
          "assetId",
          "collective"
        ],
        "type": "object",
        "properties": {
          "ownerWallet": {
            "description": "The address of the asset owner",
            "type": "string"
          },
          "assetId": {
            "description": "The asset identifier",
            "type": "string"
          },
          "collective": {
            "description": "The collective of wallets to be removed",
            "type": "array"
          }
        }
      },
      "addAndRemoveAssetViewer": {
        "required": [
          "assetId",
          "ownerWallet",
          "viewers"
        ],
        "type": "object",
        "properties": {
          "assetId": {
            "description": "The Id of the assets to join the list of workers",
            "type": "array"
          },
          "ownerWallet": {
            "description": "A previous admin with the rights to add new workers",
            "type": "string"
          },
          "viewers": {
            "description": "The address of the asset viewer",
            "type": "array"
          }
        }
      },
      "createCollective": {
        "required": [
          "assetId",
          "ownerWallet",
          "workers"
        ],
        "type": "object",
        "properties": {
          "assetId": {
            "description": "The asset identifier",
            "type": "string"
          },
          "ownerWallet": {
            "description": "The address of the owner of the collective",
            "type": "string"
          },
          "workers": {
            "description": "The list of workers to be added to the collective",
            "type": "array"
          }
        }
      },
      "createAssetMainetenancesRequest": {
        "required": [
          "assetId",
          "workerWallet",
          "fileHash"
        ],
        "type": "object",
        "properties": {
          "assetId": {
            "description": "The asset identifier",
            "type": "string"
          },
          "workerWallet": {
            "description": "The address of the worker responsible for the maintenance",
            "type": "string"
          },
          "fileHash": {
            "description": "Hash of the file to be stored",
            "type": "string"
          }
        }
      },
      "Error": {
        "description": "An error occurred.",
        "properties": {
          "message": {
            "type": "string"
          },
          "errorCode": {
            "type": "string"
          },
          "docUrl": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "x-api-key": {
        "type": "apiKey",
        "name": "x-api-key",
        "in": "header"
      }
    }
  }
}