{
  "openapi": "3.0.1",
  "info": {
    "title": "ROOTKey Documentation",
    "description": "Your API of choice for creating, managing, and validating information easily and securely!",
    "termsOfService": "https://www.rootkey.ai/legal/privacy-policy",
    "contact": {
      "name": "ROOTKey",
      "url": "https://www.rootkey.ai/contact",
      "email": "support@rootkey.ai"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "description": "Staging",
      "url": "https://dev-rootkey.westeurope.cloudapp.azure.com/auth-service/api-v1/"
    }
  ],
  "security": [
    {
      "x-api-key": []
    }
  ],
  "paths": {
    "/status/": {
      "get": {
        "tags": [
          "Status"
        ],
        "description": "Check the status of the API on the selected version",
        "security": [],
        "responses": {
          "200": {
            "description": "API status response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "[Auth service]: Status OK"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Version not found",
            "content": {
              "application/json": {
                "example": {
                  "error": 404,
                  "message": "Resource not found"
                },
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/damc/assets/": {
      "get": {
        "tags": [
          "DAMC"
        ],
        "description": "List registered assets",
        "parameters": [
          {
            "in": "query",
            "name": "ownerWallet",
            "description": "The owner's address to list all assets",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid Address",
            "content": {
              "application/json": {
                "example": {
                  "errorCode": "resource_not_found",
                  "message": "Wallet not found!",
                  "docUrl": "https://docs.rootkey.ai/api-reference/errors#resource_not_found",
                  "timestamp": "2024-08-01T00:00:00.294Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "List of Assets",
            "content": {
              "application/json": {
                "example": {
                  "assetId": 404,
                  "assetURI": "https://example.com/assets/asset_1.json",
                  "owner": ""
                },
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DAMC"
        ],
        "description": "Create a new asset",
        "requestBody": {
          "description": "Asset creation request payload",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/assetCreation"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Asset not found",
            "content": {
              "application/json": {
                "example": {
                  "error": 404,
                  "message": "Asset not found!"
                },
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/damc/assets/{assetId}/maintenances/": {
      "get": {
        "tags": [
          "DAMC"
        ],
        "description": "List maintenances for a specific asset",
        "parameters": [
          {
            "in": "path",
            "name": "assetId",
            "description": "The asset identifier for listing maintenance",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "viewerWallet",
            "description": "Admin address with permissions to list maintenances",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Asset not found",
            "content": {
              "application/json": {
                "example": {
                  "error": 404,
                  "message": "Asset not found!"
                },
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/damc/assets/{assetId}/transfer/": {
      "post": {
        "tags": [
          "DAMC"
        ],
        "description": "Transfer a specific asset to a new owner",
        "parameters": [
          {
            "in": "path",
            "name": "assetId",
            "description": "The asset identifier to be transferred",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Asset transfer request payload",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/assetTransfer"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Asset not found",
            "content": {
              "application/json": {
                "example": {
                  "error": 404,
                  "message": "Asset not found!"
                },
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/damc/assets/{assetId}/workers/collective/": {
      "post": {
        "tags": [
          "DAMC"
        ],
        "description": "Set a collective of workers for a specific asset",
        "parameters": [
          {
            "in": "path",
            "name": "assetId",
            "description": "The asset identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Collective of workers request payload",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/setCollectiveOfWorkers"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of DAMC Workers",
            "content": {
              "application/json": {
                "example": {
                  "workers": [
                    "Worker 1",
                    "Worker 2",
                    "Worker 3",
                    "Worker 4"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Asset not found",
            "content": {
              "application/json": {
                "example": {
                  "error": 404,
                  "message": "Asset not found!"
                },
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DAMC"
        ],
        "description": "Remove a collective of workers from a specific asset",
        "parameters": [
          {
            "in": "path",
            "name": "assetId",
            "description": "Identifier of the asset to remove a collective of workers",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ownerWallet",
            "description": "The address of the owner of the given asset",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "workerCollective",
            "description": "The address of the collective of workers to be removed from the given asset",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Asset not found",
            "content": {
              "application/json": {
                "example": {
                  "error": 404,
                  "message": "Asset not found!"
                },
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/damc/workers/": {
      "get": {
        "tags": [
          "DAMC"
        ],
        "description": "List registered workers",
        "parameters": [
          {
            "in": "query",
            "name": "ownerWallet",
            "description": "The owner's address to list all workers",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "assetId",
            "description": "The identifier of the asset for which you want to list the workers",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Workers not found",
            "content": {
              "application/json": {
                "example": {
                  "error": 404,
                  "message": "Workers not found!"
                },
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/damc/assets/{assetId}/viewers/": {
      "post": {
        "tags": [
          "DAMC"
        ],
        "description": "Register new viewer on the specifc asset",
        "parameters": [
          {
            "in": "path",
            "name": "assetId",
            "description": "The asset's identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Add Viewers request payload",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/addAndRemoveAssetViewer"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Asset not found",
            "content": {
              "application/json": {
                "example": {
                  "error": 404,
                  "message": "Asset not found!"
                },
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "DAMC"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/addAndRemoveAssetViewer"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Asset not found",
            "content": {
              "application/json": {
                "example": {
                  "error": 404,
                  "message": "Asset not found!"
                },
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/damc/assets/{assetId}/viewers/remove/": {
      "patch": {
        "tags": [
          "DAMC"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/addAndRemoveAssetViewer"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Asset not found",
            "content": {
              "application/json": {
                "example": {
                  "error": 404,
                  "message": "Asset not found!"
                },
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/damc/maintenances/": {
      "post": {
        "tags": [
          "DAMC"
        ],
        "description": "Creating new maintenance for a particular asset",
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createAssetMainetenancesRequest"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Asset not found",
            "content": {
              "application/json": {
                "example": {
                  "error": 404,
                  "message": "Asset not found!"
                },
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "assetCreation": {
        "required": [
          "ownerWallet",
          "assetURI"
        ],
        "type": "object",
        "properties": {
          "ownerWallet": {
            "description": "The address of the asset owner",
            "type": "string"
          },
          "assetURI": {
            "description": "Asset URI",
            "type": "string"
          }
        }
      },
      "assetTransfer": {
        "required": [
          "ownerWallet",
          "destinationWallet"
        ],
        "type": "object",
        "properties": {
          "ownerWallet": {
            "description": "Address of the current owner of the asset to be transferred",
            "type": "string"
          },
          "destinationWallet": {
            "description": "Destination address to which the asset should be transferred",
            "type": "string"
          }
        }
      },
      "listAssetMaintenances": {
        "required": [
          "viewerWallet"
        ],
        "type": "object",
        "properties": {
          "viewerWallet": {
            "description": "The address of the asset viewer",
            "type": "string"
          }
        }
      },
      "setCollectiveOfWorkers": {
        "required": [
          "ownerWallet",
          "workers"
        ],
        "type": "object",
        "properties": {
          "ownerWallet": {
            "description": "The address of the asset owner",
            "type": "string"
          },
          "workers": {
            "description": "Array of the multiple workers to be added",
            "type": "array"
          }
        }
      },
      "setCollective": {
        "required": [
          "ownerWallet",
          "assetId",
          "collective"
        ],
        "type": "object",
        "properties": {
          "ownerWallet": {
            "description": "The address of the asset owner",
            "type": "string"
          },
          "assetId": {
            "description": "The asset identifier",
            "type": "string"
          },
          "collective": {
            "description": "The collective of wallets to be added to damc contract",
            "type": "array"
          }
        }
      },
      "unsetCollective": {
        "required": [
          "ownerWallet",
          "assetId",
          "collective"
        ],
        "type": "object",
        "properties": {
          "ownerWallet": {
            "description": "The address of the asset owner",
            "type": "string"
          },
          "assetId": {
            "description": "The asset identifier",
            "type": "string"
          },
          "collective": {
            "description": "The collective of wallets to be removed",
            "type": "array"
          }
        }
      },
      "addAndRemoveAssetViewer": {
        "required": [
          "assetId",
          "ownerWallet",
          "viewers"
        ],
        "type": "object",
        "properties": {
          "assetId": {
            "description": "The Id of the assets to join the list of workers",
            "type": "array"
          },
          "ownerWallet": {
            "description": "A previous admin with the rights to add new workers",
            "type": "string"
          },
          "viewers": {
            "description": "The address of the asset viewer",
            "type": "array"
          }
        }
      },
      "createAssetMainetenancesRequest": {
        "required": [
          "assetId",
          "ownerWallet",
          "workerWallet"
        ],
        "type": "object",
        "properties": {
          "assetId": {
            "description": "The asset identifier",
            "type": "string"
          },
          "ownerWallet": {
            "description": "The owner of the asset",
            "type": "string"
          },
          "workerWallet": {
            "description": "The address of the worker responsible for the maintenance",
            "type": "string"
          },
          "fileHash": {
            "description": "Hash of the file to be stored",
            "type": "string"
          }
        }
      },
      "Error": {
        "description": "An error occurred.",
        "properties": {
          "message": {
            "type": "string"
          },
          "errorCode": {
            "type": "string"
          },
          "docUrl": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "x-api-key": {
        "type": "apiKey",
        "name": "x-api-key",
        "in": "header"
      }
    }
  }
}